{"version":3,"sources":["webpack:///./src/components/GeneralConstruction.vue?a155","webpack:///src/components/GeneralConstruction.vue","webpack:///./src/components/GeneralConstruction.vue?e7e9","webpack:///./src/components/GeneralConstruction.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_m","attrs","p1","p2","p3","p4","p5","p6","p7","p8","p9","staticRenderFns","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,IAAI,CAACJ,EAAIM,GAAG,2MAA2MN,EAAIO,GAAG,GAAGH,EAAG,IAAI,CAACA,EAAG,cAAc,CAACI,MAAM,CAAC,QAAUR,EAAIS,OAAO,GAAGL,EAAG,IAAI,CAACA,EAAG,cAAc,CAACI,MAAM,CAAC,QAAUR,EAAIU,OAAO,GAAGV,EAAIO,GAAG,GAAGH,EAAG,IAAI,CAACA,EAAG,cAAc,CAACI,MAAM,CAAC,QAAUR,EAAIW,OAAO,GAAGX,EAAIO,GAAG,GAAGH,EAAG,IAAI,CAACA,EAAG,cAAc,CAACI,MAAM,CAAC,QAAUR,EAAIY,OAAO,GAAGZ,EAAIO,GAAG,GAAGH,EAAG,IAAI,CAACA,EAAG,cAAc,CAACI,MAAM,CAAC,QAAUR,EAAIa,OAAO,GAAGb,EAAIO,GAAG,GAAGH,EAAG,IAAI,CAACA,EAAG,cAAc,CAACI,MAAM,CAAC,QAAUR,EAAIc,OAAO,GAAGd,EAAIO,GAAG,GAAGH,EAAG,IAAI,CAACA,EAAG,cAAc,CAACI,MAAM,CAAC,QAAUR,EAAIe,OAAO,GAAGf,EAAIO,GAAG,GAAGH,EAAG,IAAI,CAACA,EAAG,cAAc,CAACI,MAAM,CAAC,QAAUR,EAAIgB,OAAO,GAAGhB,EAAIO,GAAG,GAAGH,EAAG,IAAI,CAACA,EAAG,cAAc,CAACI,MAAM,CAAC,QAAUR,EAAIiB,OAAO,MAC94BC,EAAkB,CAAC,WAAa,IAAIlB,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,SAAS,CAACJ,EAAIM,GAAG,2BAA2B,WAAa,IAAIN,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,SAAS,CAACJ,EAAIM,GAAG,mBAAmB,WAAa,IAAIN,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,SAAS,CAACJ,EAAIM,GAAG,mBAAmB,WAAa,IAAIN,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,SAAS,CAACJ,EAAIM,GAAG,oBAAoB,WAAa,IAAIN,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,SAAS,CAACJ,EAAIM,GAAG,oBAAoB,WAAa,IAAIN,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,SAAS,CAACJ,EAAIM,GAAG,oBAAoB,WAAa,IAAIN,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,SAAS,CAACJ,EAAIM,GAAG,0CAA0C,WAAa,IAAIN,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,SAAS,CAACJ,EAAIM,GAAG,yCCqEtjC,GACE,KAAF,sBACE,KAFF,WAGI,MAAJ,CACM,GAAN,2dAeM,GAAN,g9BAaM,GAAN,qHAGM,GAAN,wWAOM,GAAN,gPAKM,GAAN,+NAKM,GAAN,6YAWM,GAAN,6NASM,GAAN,qcC9I6V,I,YCOzVa,EAAY,eACd,EACApB,EACAmB,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/chunk-2d0ac20b.52afd8bc.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._v(\"\\n    Los códigos de Reed-Muller son un conjunto infinito de códigos y además\\n    forman parte de los códigos de evaluación. A continuación se da una\\n    construcción general como referencia.\\n  \")]),_vm._m(0),_c('p',[_c('vue-mathjax',{attrs:{\"formula\":_vm.p1}})],1),_c('p',[_c('vue-mathjax',{attrs:{\"formula\":_vm.p2}})],1),_vm._m(1),_c('p',[_c('vue-mathjax',{attrs:{\"formula\":_vm.p3}})],1),_vm._m(2),_c('p',[_c('vue-mathjax',{attrs:{\"formula\":_vm.p4}})],1),_vm._m(3),_c('p',[_c('vue-mathjax',{attrs:{\"formula\":_vm.p5}})],1),_vm._m(4),_c('p',[_c('vue-mathjax',{attrs:{\"formula\":_vm.p6}})],1),_vm._m(5),_c('p',[_c('vue-mathjax',{attrs:{\"formula\":_vm.p7}})],1),_vm._m(6),_c('p',[_c('vue-mathjax',{attrs:{\"formula\":_vm.p8}})],1),_vm._m(7),_c('p',[_c('vue-mathjax',{attrs:{\"formula\":_vm.p9}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"Función evaluación\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"Definición\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"Definición\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"Proposición\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"Proposición\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"Proposición\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"Aplicación evaluación Isomorfismo\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"Código de Reed-Muller (general)\")])])}]\n\nexport { render, staticRenderFns }","<!--\n  - Copyright (c) 2021 Tobias Briones. All rights reserved.\n  -\n  - SPDX-License-Identifier: BSD-3-Clause\n  -\n  - This file is part of Course Project at UNAH-MM544: Reed Muller Codes.\n  -\n  - The underlying theoretical contents bibliography is found in the\n  - BIBLIOGRAPHY.md file in the root directory of this project.\n  -\n  - This source code is licensed under the BSD-3-Clause License found in the\n  - LICENSE file in the root directory of this source tree or at\n  - https://opensource.org/licenses/BSD-3-Clause.\n  -->\n\n<template>\n  <div>\n    <p>\n      Los códigos de Reed-Muller son un conjunto infinito de códigos y además\n      forman parte de los códigos de evaluación. A continuación se da una\n      construcción general como referencia.\n    </p>\n\n    <p><strong>Función evaluación</strong></p>\n    <p>\n      <vue-mathjax :formula=\"p1\"></vue-mathjax>\n    </p>\n\n    <p>\n      <vue-mathjax :formula=\"p2\"></vue-mathjax>\n    </p>\n\n    <p><strong>Definición</strong></p>\n    <p>\n      <vue-mathjax :formula=\"p3\"></vue-mathjax>\n    </p>\n\n    <p><strong>Definición</strong></p>\n    <p>\n      <vue-mathjax :formula=\"p4\"></vue-mathjax>\n    </p>\n\n    <p><strong>Proposición</strong></p>\n    <p>\n      <vue-mathjax :formula=\"p5\"></vue-mathjax>\n    </p>\n\n    <p><strong>Proposición</strong></p>\n    <p>\n      <vue-mathjax :formula=\"p6\"></vue-mathjax>\n    </p>\n\n    <p><strong>Proposición</strong></p>\n    <p>\n      <vue-mathjax :formula=\"p7\"></vue-mathjax>\n    </p>\n\n    <p><strong>Aplicación evaluación Isomorfismo</strong></p>\n    <p>\n      <vue-mathjax :formula=\"p8\"></vue-mathjax>\n    </p>\n\n    <p><strong>Código de Reed-Muller (general)</strong></p>\n    <p>\n      <vue-mathjax :formula=\"p9\"></vue-mathjax>\n    </p>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'GeneralConstruction',\n    data() {\n      return {\n        p1: `\n        Sean  $P = \\\\{ \\\\textbf{p}_1, ... ,\\\\textbf{p}_n | n \\\\in \\\\mathbb{N}\n         \\\\}$ un subconjunto finito de un objeto geométrico $X$ y $V$ un\n         $\\\\mathscr{F}_q$-espacio vectorial de aplicaciones $f:X \\\\to \\\\mathscr{F}_q$.\n         Se llama evaluación en $P$ de las aplicaciones de $V$ a la\n         aplicación:\n\n        $$\n        ev_P: V \\\\to \\\\mathbb{F_q^n}\n        $$\n\n        $$\n        f \\\\to ev_P (f) = f(\\\\textbf{p}_1)...f(\\\\textbf{p}_n).\n        $$\n        `,\n        p2: `\n        Como $V$ es un $\\\\mathbb{F}_q$-espacio vectorial, si $ev_P$ resulta ser una aplicación lineal,\n        entonces su imagen directa $ev_P(V)$ será un $F_q$-subespacio vectorial de $F_q^n$, es decir, un\n        código lineal de longitud $n$ sobre $F_q$ cuyas palabras son las imágenes\n        de las aplicaciones de $V$ a través de $ev_P$. Bajo todas estas circunstancias, se\n        conoce al código $ev_P(V)$ así obtenido por código de evaluación en $P$ de las\n        aplicaciones de $V$. Los parámetros que definen al código pueden deducirse\n        de las propiedades de $V$ como $F_q$-espacio vectorial. Los códigos de Reed-Muller son\n         un caso particular de códigos de evaluación, donde $P = X = F_q^m$ -que en este caso es un anillo conmutativo y unitario\n        con estructura de $F_q$-espacio vectorial- y $V = F_q[x1, ..., xm]$ -que, además de\n        ser un $F_q$-espacio vectorial, también tiene estructura de anillo conmutativo y\n        unitario-.\n        `,\n        p3: `\n        Una aplicación $q-aria$ de $m$ variables es una aplicación $f:\\\\mathbb{F}_q^m \\\\to \\\\mathbb{F}_q$.\n        `,\n        p4: `\n         Sea $F \\\\in F_q[x_1, ..., x_m]$ un polinomio. Si $n = q^m$, se conoce por\n         aplicación polinómica asociada a $F$ a la aplicación $q-aria$\n         $f : \\\\mathbb{F}_q^m \\\\to \\\\mathbb{F}_q$ tal que, para cualquier $m-tupla$\n          $(a_1, ... , a_m) \\\\in \\\\mathbb{F}_q^m$, verifica que\n           $f(a_1, ... , a_m) = F(a_1, ... , a_m)$.\n        `,\n        p5: `\n        Sea $F \\\\in \\\\mathbb{F}_q [x_1, ..., x_m]$. Si $F(\\\\textbf{v}) = 0$ para todo\n        $\\\\textbf{v} \\\\in F_q^m$ -en particular $F^* -\\\\textbf{v}- = 0$ para todo\n        $\\\\textbf{v} \\\\in \\\\mathbb{F}_q^m$, entonces $F^* = 0$.\n        `,\n        p6: `\n         Los conjuntos $\\\\mathbb{F}_q^n$ y $P_m^q$ son isomorfos como $F_q$-álgebras.\n          En consecuencia, cada polinomio de una misma clase de equivalencia\n          determina la misma aplicación polinómica.\n        `,\n        p7: `\n        La aplicación evaluación en $\\\\mathbb{F}_q^m$ de los polinomios de $\\\\mathbb{F}_q[x_1, ..., x_m]$ en $\\\\mathbb{F}_q^n$ dada por:\n\n        $$\n        ev_{\\\\mathbb{F}_q^m} : \\\\mathbb{F}_q [x_1, ..., x_m] \\\\to \\\\mathbb{F}_q^n\n        $$\n        $$\n        F \\\\to ev_{\\\\mathbb{F}_q^m}(F) = \\\\textbf{F} = F_1, ..., F_n\n        $$\n        es un epimorfismo de anillos, que además es lineal.\n        `,\n        p8: `\n         $$\n          \\\\bar{ev}_{\\\\mathbb{F}_q^m} : P_m^q \\\\to \\\\mathbb{F}_q^n\n          $$\n          $$\n          \\\\bar{F} \\\\to \\\\bar{ev}_{\\\\mathbb{F}_q^m}(\\\\bar{F}) =\n          ev_{\\\\mathbb{F}_q^m}(F).\n          $$\n        `,\n        p9: `\n        Sean $p \\\\in \\\\mathbb{N}$ primo y $q = p^s$. Sean $m$, $r$ $\\\\in \\\\mathbb{N}$\n         tales que $r \\\\leq m(q-1)$. Un código de Reed-Muller $q-ario$\n         $\\\\mathscr{RM}_q (r,m)$ de orden $r$ y longitud $q^m$ a la imagen directa\n         de $\\\\mathscr{P}_m^p (r)$ a través de la aplicación - Definición\n         -Aplicación evaluación Isomorfismo- -. Además, se define $\\\\mathscr{RM}_q\n         (l,m)= \\\\{0 ... 0\\\\}, \\\\forall l < 0$.\n        `,\n      };\n    },\n  };\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneralConstruction.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneralConstruction.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GeneralConstruction.vue?vue&type=template&id=5471f0b7&\"\nimport script from \"./GeneralConstruction.vue?vue&type=script&lang=js&\"\nexport * from \"./GeneralConstruction.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}