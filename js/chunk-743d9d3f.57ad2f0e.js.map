{"version":3,"sources":["webpack:///./src/components/Bonus.vue?f01a","webpack:///src/components/Bonus.vue","webpack:///./src/components/Bonus.vue?e856","webpack:///./src/components/Bonus.vue?82c2","webpack:///./src/components/Bonus.vue?0ff5"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACA,EAAG,UAAU,CAACA,EAAG,KAAK,CAACL,EAAIQ,GAAG,8CAA8CH,EAAG,IAAI,CAACL,EAAIQ,GAAG,mbAAmbH,EAAG,IAAI,CAACI,MAAM,CAAC,KAAO,iDAAiD,CAACT,EAAIQ,GAAG,uCAAuCH,EAAG,MAAM,CAACA,EAAG,SAAS,CAACI,MAAM,CAAC,IAAM,oCAAoC,MAAQ,2CAA2CJ,EAAG,UAAU,CAACA,EAAG,KAAK,CAACL,EAAIQ,GAAG,kCAAkCH,EAAG,IAAI,CAACL,EAAIQ,GAAG,mKAAmKH,EAAG,IAAI,CAACL,EAAIQ,GAAG,yFAAyFH,EAAG,SAAS,CAACL,EAAIQ,GAAG,8GAA8GH,EAAG,IAAI,CAACI,MAAM,CAAC,KAAO,sDAAsD,CAACT,EAAIQ,GAAG,+CAA+CH,EAAG,UAAU,CAACA,EAAG,KAAK,CAACL,EAAIQ,GAAG,wCAAwCH,EAAG,IAAI,CAACL,EAAIQ,GAAG,6QAA6QH,EAAG,IAAI,CAACI,MAAM,CAAC,KAAO,0DAA0D,CAACT,EAAIQ,GAAG,uDC4E54D,GACE,KAAF,SC9E+U,I,wBCQ3UE,EAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAG,E,2CCnBf,W","file":"js/chunk-743d9d3f.57ad2f0e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('section',[_c('h2',[_vm._v(\"\\n      MST: Minimum Spanning Tree\\n    \")]),_c('p',[_vm._v(\"\\n      El siguiente proyecto es un juego de mazmorras que implementa un\\n      algoritmo de Prim para obtener mazmorras conectadas por distancias\\n      mínimas y que no se pueda volver a una mazmorra al ya haber pasado por\\n      ella. Este algoritmo es usado en los routers para buscar una dirección\\n      IP y no quedarse en un loop infinito si se encontrara a sí mismo al\\n      haber un circuito cerrado por ejemplo.\\n    \")]),_c('a',{attrs:{\"href\":\"https://github.com/tobiasbriones/dungeon-mst\"}},[_vm._v(\"Dungeon MST Repositorio de GitHub\")]),_c('div',[_c('iframe',{attrs:{\"src\":\"./proyecto-juego-de-mazmorras.pdf\",\"title\":\"Proyecto Juego de Mazmorras | MST\"}})])]),_c('section',[_c('h2',[_vm._v(\"\\n      Criptosistemas\\n    \")]),_c('p',[_vm._v(\"\\n      En este proyecto, implementé varios algoritmos clásicos de criptosistemas\\n      tales como los famosos: Shift, Substitution, Affine, Vigenere.\\n    \")]),_c('p',[_vm._v(\"\\n      Recomiendo revisar el siguiente texto para estudiar estos contenidos:\\n      \"),_c('strong',[_vm._v(\"\\n        Introduction to Cryptography With Coding Theory by Wade Trappe Lawrence C Washington\\n      \")])]),_c('a',{attrs:{\"href\":\"https://github.com/tobiasbriones/ep-cryptosystems\"}},[_vm._v(\"EP: Cryptosystems Repositorio de GitHub\")])]),_c('section',[_c('h2',[_vm._v(\"\\n      Hill Cipher para Z26\\n    \")]),_c('p',[_vm._v(\"\\n      En este proyecto, escribí un programa para calcular un cifrado de Hill\\n      (Hill Cipher) con sus funciones de encriptación/desencriptación utilizando una\\n      implementación de matrices en el campo de los números enteros módulo 26\\n      (Z26).\\n    \")]),_c('a',{attrs:{\"href\":\"https://github.com/tobiasbriones/ep-hill-cipher-mat26\"}},[_vm._v(\"EP: Hill Cipher Mat26 Repositorio de GitHub\")])])])}]\n\nexport { render, staticRenderFns }","<!--\n  - Copyright (c) 2021 Tobias Briones. All rights reserved.\n  -\n  - SPDX-License-Identifier: BSD-3-Clause\n  -\n  - This file is part of Course Project at UNAH-MM544: Reed Muller Codes.\n  -\n  - The underlying theoretical contents bibliography is found in the\n  - BIBLIOGRAPHY.md file in the root directory of this project.\n  -\n  - This source code is licensed under the BSD-3-Clause License found in the\n  - LICENSE file in the root directory of this source tree or at\n  - https://opensource.org/licenses/BSD-3-Clause.\n  -->\n\n<template>\n  <div>\n    <section>\n      <h2>\n        MST: Minimum Spanning Tree\n      </h2>\n\n      <p>\n        El siguiente proyecto es un juego de mazmorras que implementa un\n        algoritmo de Prim para obtener mazmorras conectadas por distancias\n        mínimas y que no se pueda volver a una mazmorra al ya haber pasado por\n        ella. Este algoritmo es usado en los routers para buscar una dirección\n        IP y no quedarse en un loop infinito si se encontrara a sí mismo al\n        haber un circuito cerrado por ejemplo.\n      </p>\n\n      <a href=\"https://github.com/tobiasbriones/dungeon-mst\">Dungeon MST Repositorio de GitHub</a>\n\n      <div>\n        <iframe src=\"./proyecto-juego-de-mazmorras.pdf\" title=\"Proyecto Juego de Mazmorras | MST\">\n        </iframe>\n      </div>\n    </section>\n\n    <section>\n      <h2>\n        Criptosistemas\n      </h2>\n\n      <p>\n        En este proyecto, implementé varios algoritmos clásicos de criptosistemas\n        tales como los famosos: Shift, Substitution, Affine, Vigenere.\n      </p>\n\n      <p>\n        Recomiendo revisar el siguiente texto para estudiar estos contenidos:\n        <strong>\n          Introduction to Cryptography With Coding Theory by Wade Trappe Lawrence C Washington\n        </strong>\n      </p>\n\n      <a href=\"https://github.com/tobiasbriones/ep-cryptosystems\">EP: Cryptosystems Repositorio de GitHub</a>\n    </section>\n\n    <section>\n      <h2>\n        Hill Cipher para Z26\n      </h2>\n\n      <p>\n        En este proyecto, escribí un programa para calcular un cifrado de Hill\n        (Hill Cipher) con sus funciones de encriptación/desencriptación utilizando una\n        implementación de matrices en el campo de los números enteros módulo 26\n        (Z26).\n      </p>\n\n      <a href=\"https://github.com/tobiasbriones/ep-hill-cipher-mat26\">EP: Hill Cipher Mat26 Repositorio de GitHub</a>\n    </section>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'Bonus',\n  };\n</script>\n\n<style scoped>\n  iframe {\n    display: block;\n    width: 80%;\n    height: 720px;\n    margin: 32px auto;\n    border: 0;\n  }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Bonus.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Bonus.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Bonus.vue?vue&type=template&id=b4cc60d6&scoped=true&\"\nimport script from \"./Bonus.vue?vue&type=script&lang=js&\"\nexport * from \"./Bonus.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Bonus.vue?vue&type=style&index=0&id=b4cc60d6&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b4cc60d6\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Bonus.vue?vue&type=style&index=0&id=b4cc60d6&scoped=true&lang=css&\""],"sourceRoot":""}